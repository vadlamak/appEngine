## ---
## Mininal configuration to have Nginx+LUA (Openresty) to acts as sandbox that run lua based api 
## aggregation scripts
## ---

worker_processes  2;
error_log logs/error.log warn;
events { worker_connections 256; }

http {
  
  ## upstream of your api
  ## this one assumes you have the SentimentAPI (https://github.com/solso/sentiment-api-example) 
  ## running on port 8080
  upstream api-backend {
    server api.wunderground.com max_fails=5 fail_timeout=30;
  }
   
  server {
    ## the port of your sandboxed nginx
    lua_need_request_body on;
    listen 8090;
    server_name api-sentiment.3scale.net;
    lua_code_cache off;

    ## for each api aggregation lua script you need a localtion, which will be the end-point used
    ## by the API consumers, e.g. GET /aggr/positive_word/SENTENCE.json
    location ~ ^/v1/geocode/.*/triggers/  {
      ## CHANGEME
      ## you must define full path to the user_scripts directory
      ## set $lua_user_scripts_path "/path/to/api-aggregator/sandbox/lua/user_scripts/";
      set $lua_user_scripts_path "lua/user_scripts/";
      
      ## utils_sandbox will route the request to the proper lua script in user_scripts/ based on the url path
      ## after /aggr/ and before any of the following characters /&?. or end of string. 
      ## for instance 
      ## /aggr/positive_word/sentence.json maps to user_scripts/positive_word.lua
      ## /aggr/another_script.xml maps to user_scripts/another_script.lua
      ## /aggr/foo_bar maps to users_scripts/foo_bar.lua

      access_by_lua_file lua/system/ifttt.lua;
    }
  location ~ ^/aggr/ {
      ## CHANGEME
      ## you must define full path to the user_scripts directory
      ## set $lua_user_scripts_path "/path/to/api-aggregator/sandbox/lua/user_scripts/";
      set $lua_user_scripts_path "lua/";
      
      ## utils_sandbox will route the request to the proper lua script in user_scripts/ based on the url path
      ## after /aggr/ and before any of the following characters /&?. or end of string. 
      ## for instance 
      ## /aggr/positive_word/sentence.json maps to user_scripts/positive_word.lua
      ## /aggr/another_script.xml maps to user_scripts/another_script.lua
      ## /aggr/foo_bar maps to users_scripts/foo_bar.lua
      access_by_lua_file lua/system/sandbox.lua;
    }
    
    ## whatever is not /aggr (prefix for api aggregations) will be send to the api-backend
    location /api/ {
        proxy_set_header Accept-Encoding gzip;
            proxy_pass http://api.wunderground.com;
    }
  }
}

