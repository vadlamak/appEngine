## ---
## Mininal configuration to have Nginx+LUA (Openresty) to acts as sandbox that run lua based api 
## aggregation scripts
## ---

worker_processes  2;
error_log logs/error.log warn;
events { worker_connections 256; }

http {
  
  ## upstream of your api
  ## this one assumes you have the SentimentAPI (https://github.com/solso/sentiment-api-example) 
  ## running on port 8080
  ## this does not work
  upstream api-backend {
    server api.wunderground.com max_fails=5 fail_timeout=30;
  }
   
  server {
    # nginx does not get the body of a request by default, must request access
    lua_need_request_body on;
    # port to listen to for incoming requests`
    listen 8090;
    # check docs for what this really means`
    server_name api.weather.com;
    ## for dev, remove this or turn it to on for production
    lua_code_cache off;

    location ~ ^/v1/geocode/.*/triggers/  {
      set $lua_user_scripts_path "lua/user_scripts/";
        # handle the rest of the path
      access_by_lua_file lua/system/ifttt.lua;
    }
    location = /ifttt/v1/triggers/ {
      set $lua_user_scripts_path "lua/user_scripts/";
        # handle the rest of the path
      access_by_lua_file lua/system/ifttt.lua;
    }
    
    ## send /api traffic to the backend to fetch data
    location /api/ {
        # MUST be gzipped, we do not check headers yet
        proxy_set_header Accept-Encoding gzip;
        proxy_pass http://api.wunderground.com;
    }
  }
}

