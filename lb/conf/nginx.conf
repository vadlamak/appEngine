## ---
## Mininal configuration to have Nginx+LUA (Openresty) to act as a load-balancer between your
## api backend and your api aggregation sandbox. This does not have to be nginx at all, your
## load balancer can do this very well
## ---

worker_processes  2;
error_log logs/error.log warn;
events { worker_connections 256; }

http {
  
  ## upstream of your api
  ## this one assumes you have the SentimentAPI (https://github.com/solso/sentiment-api-example) 
  ## running on port 8080
  upstream api-backend {
    server localhost:8080 max_fails=5 fail_timeout=30;
  }

  ## upstream of your api aggregation sandbox, in this case is running on same server but you can
  ## put the sandbox anywhere you want, even outside your data-center
  upstream aggregation-sandbox {
    server localhost:8090 max_fails=5 fail_timeout=30;
  }
	  
  server {
    listen 8000;
    server_name api-sentiment.3scale.net;
        
    ## this locations is only to serve the demo html5 app    
    location ~/demo {
      ## CHANGEME, set the path to the html5 app demo
      root "html/";
      index test_api_aggr.html;   
    }

    ## if the request starts with /aggr, send it to the aggregation sandbox
    location ~ ^/aggr/ {
      proxy_pass http://aggregation-sandbox;
    }

    ## whatever is not /aggr (prefix for api aggregations) will be send to the api-backend, as it 
    ## normally should :)
    location / {
      proxy_pass http://api-backend;
    }
  }
}

